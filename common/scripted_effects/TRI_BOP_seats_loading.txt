#刷新权力平衡界面
TRI_BOP_init_parliament = {
	TRI_senators_init_BOP_seats = yes
	TRI_house_init_BOP_seats = yes
	TRI_BOP_generate_faction_pie = yes
	BA_TRI_generate_focus_modifier = yes
}
TRI_senators_init_BOP_seats = { #上议院
	clear_array = TRI_BOP_senators_grid_box_array

	if = {
		limit = { has_country_flag = TRI_senate_detail_ignored }
		resize_array = {
			array = TRI_BOP_senators_grid_box_array
			value = 4
			size = var:total_seats@BA_TRI_senate_seat
		}
	}
	else = {
		# Generate partial sums t1 = (P1), t2 = (P1 + P2), t3 = (P1 + P2 + P3)
		# so that we can use resize_array to fill our array with the right number of seats for each party
		set_temp_variable = { t1 = BOP_hardliner@BA_TRI_senate_seat }
		set_temp_variable = { t2 = BOP_conservative@BA_TRI_senate_seat }
		set_temp_variable = { t3 = BOP_moderate@BA_TRI_senate_seat }
		set_temp_variable = { t4 = BOP_none@BA_TRI_senate_seat }

		add_to_temp_variable = { t2 = t1 }
		add_to_temp_variable = { t3 = t2 }
		add_to_temp_variable = { t4 = t3 }

		# Resize array to t1 seats, setting P1 frame numbers to 1 (Party 1 color)
		resize_array = {
			array = TRI_BOP_senators_grid_box_array
			value = 1
			size = t1
		}
		# Resize array to t2 seats, setting P2 frame numbers to 2 (Party 2 color)
		resize_array = {
			array = TRI_BOP_senators_grid_box_array
			value = 2
			size = t2
		}
		# Resize array to t3 seats, setting P3 frame numbers to 3 (Party 3 color)
		resize_array = {
			array = TRI_BOP_senators_grid_box_array
			value = 3
			size = t3
		}
		resize_array = {
			array = TRI_BOP_senators_grid_box_array
			value = 4
			size = t4
		}
	}
	
}

TRI_house_init_BOP_seats = { #下议院
	clear_array = TRI_BOP_house_grid_box_array
	if = {
		limit = { has_country_flag = TRI_house_detail_ignored }
		resize_array = {
			array = TRI_BOP_house_grid_box_array
			value = 4
			size = var:total_seats@BA_TRI_house_seat
		}
	}
	else = {
		# Generate partial sums t1 = (P1), t2 = (P1 + P2), t3 = (P1 + P2 + P3)
		# so that we can use resize_array to fill our array with the right number of seats for each party
		set_temp_variable = { t1 = BOP_hardliner@BA_TRI_house_seat }
		set_temp_variable = { t2 = BOP_conservative@BA_TRI_house_seat }
		set_temp_variable = { t3 = BOP_moderate@BA_TRI_house_seat }
		set_temp_variable = { t4 = BOP_none@BA_TRI_house_seat }

		add_to_temp_variable = { t2 = t1 }
		add_to_temp_variable = { t3 = t2 }
		add_to_temp_variable = { t4 = t3 }



		# Resize array to t1 seats, setting P1 frame numbers to 1 (Party 1 color)
		resize_array = {
			array = TRI_BOP_house_grid_box_array
			value = 1
			size = t1
		}
		# Resize array to t2 seats, setting P2 frame numbers to 2 (Party 2 color)
		resize_array = { #黄色点为2号
			array = TRI_BOP_house_grid_box_array
			value = 2
			size = t2
		}
		# Resize array to t3 seats, setting P3 frame numbers to 3 (Party 3 color)
		resize_array = { #蓝色点为3号
			array = TRI_BOP_house_grid_box_array
			value = 3
			size = t3
		}
		resize_array = {
			array = TRI_BOP_house_grid_box_array
			value = 4
			size = t4
		}
	}
}
#产生主导派系并绘制饼图
TRI_BOP_generate_faction_pie = {
	set_temp_variable = { TRI_BOP_hardliner_weight_1 = BOP_hardliner@BA_TRI_senate_seat }
	set_temp_variable = { TRI_BOP_hardliner_weight_2 = BOP_hardliner@BA_TRI_house_seat }
	set_temp_variable = { TRI_BOP_conservative_weight_1 = BOP_conservative@BA_TRI_senate_seat }
	set_temp_variable = { TRI_BOP_conservative_weight_2 = BOP_conservative@BA_TRI_house_seat }
	set_temp_variable = { TRI_BOP_moderate_weight_1 = BOP_moderate@BA_TRI_senate_seat }
	set_temp_variable = { TRI_BOP_moderate_weight_2 = BOP_moderate@BA_TRI_house_seat }
	#每个上议院席位10分
	multiply_temp_variable = { TRI_BOP_hardliner_weight_1 = 10 }
	multiply_temp_variable = { TRI_BOP_conservative_weight_1 = 10 }
	multiply_temp_variable = { TRI_BOP_moderate_weight_1 = 10 }
	#每个下议院席位3分
	multiply_temp_variable = { TRI_BOP_hardliner_weight_2 = 3 }
	multiply_temp_variable = { TRI_BOP_conservative_weight_2 = 3 }
	multiply_temp_variable = { TRI_BOP_moderate_weight_2 = 3 }
	#两院得分加和
	add_to_temp_variable = { TRI_BOP_hardliner_weight_1 = TRI_BOP_hardliner_weight_2 }
	add_to_temp_variable = { TRI_BOP_conservative_weight_1 = TRI_BOP_conservative_weight_2 }
	add_to_temp_variable = { TRI_BOP_moderate_weight_1 = TRI_BOP_moderate_weight_2 }
	#计算权重差
	set_variable = { TRI_BOP_weight_difference = TRI_BOP_hardliner_weight_1 }
	subtract_from_variable = { TRI_BOP_weight_difference = TRI_BOP_moderate_weight_1 }
	
	#确定饼图份额
	set_variable = { TRI_BOP_faction_weight_pie_frame_1 = TRI_BOP_hardliner_weight_1 }
	set_variable = { TRI_BOP_faction_weight_pie_frame_2 = TRI_BOP_conservative_weight_1 }
	set_variable = { TRI_BOP_faction_weight_pie_frame_3 = TRI_BOP_moderate_weight_1 }
	add_to_variable = { TRI_BOP_faction_weight_pie_frame_2 = TRI_BOP_hardliner_weight_1 }
	add_to_variable = { TRI_BOP_faction_weight_pie_frame_3 = TRI_BOP_faction_weight_pie_frame_2 }
	#确定主导派系，要求过400分
	set_variable = { TRI_BOP_main_faction = token:BOP_none }
	if = {
		limit = { check_variable = { TRI_BOP_hardliner_weight_1 > 400 } }
		set_variable = { TRI_BOP_main_faction = token:BOP_hardliner }
	}
	else_if = {
		limit = { check_variable = { TRI_BOP_conservative_weight_1 > 400 } }
		set_variable = { TRI_BOP_main_faction = token:BOP_conservative }
	}
	else_if = {
		limit = { check_variable = { TRI_BOP_moderate_weight_1 > 400 } }
		set_variable = { TRI_BOP_main_faction = token:BOP_moderate }
	}
	TRI_add_main_faction_modifier = yes
	#计算派系所占百分比
	divide_temp_variable = { TRI_BOP_hardliner_weight_1 = 600 }
	divide_temp_variable = { TRI_BOP_conservative_weight_1 = 600 }
	divide_temp_variable = { TRI_BOP_moderate_weight_1 = 600 }
	set_variable = { percent@BOP_hardliner = TRI_BOP_hardliner_weight_1 }
	set_variable = { percent@BOP_conservative = TRI_BOP_conservative_weight_1 }
	set_variable = { percent@BOP_moderate = TRI_BOP_moderate_weight_1 }
}
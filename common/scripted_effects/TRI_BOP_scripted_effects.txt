#选择焦点立场后，确定对立派系
TRI_BOP_generate_against_association = {
	clear_array = BA_TRI_non_against_association
	clear_array = TRI_against_association
	for_each_loop = {
		array = TRI_parliament_association
		value = v
	}
	TRI_generate_unity_modifier = yes
}
TRI_BOP_generate_association_faction = {
	for_each_loop = {
		array = TRI_parliament_association
		value = association
		set_variable = { faction@var:association = token:BOP_none }
		set_temp_variable = { BOP_hardliner@var:association = seatNumber@var:association }
		set_temp_variable = { BOP_moderate@var:association = seatNumber@var:association }
		multiply_temp_variable = { BOP_hardliner@var:association = hardliner@var:association }
		multiply_temp_variable = { BOP_moderate@var:association = moderate@var:association }
		if = {
			limit = {
				check_variable = { hardliner@var:association > 0.5 }
			}
			set_variable = { faction@var:association = token:BOP_hardliner }
		}
		else_if = {
			limit = {
				check_variable = { moderate@var:association > 0.5 }
			}
			set_variable = { faction@var:association = token:BOP_moderate }
		}
		else_if = {
			limit = {
				check_variable = { conservative@var:association > 0.5 }
			}
			set_variable = { faction@var:association = token:BOP_conservative }
		}
		if = {
			limit = {
				check_variable = { no_faction@var:association = 1 }
			}
			set_variable = { faction@var:association = token:BOP_none }
			set_variable = { BOP_none@var:association = seatNumber@var:association }
		}
		TRI_generate_conservative_percentage = yes
	}
}
#上下议院派系人数刷新
TRI_BOP_calculate_parliament_seats = {
	hidden_effect = {
		set_variable = { valid_seats@var:target_parliament = total_seats@var:target_parliament }
		set_variable = { BOP_hardliner@var:target_parliament = 0 }
		set_variable = { BOP_moderate@var:target_parliament = 0 }
		set_variable = { BOP_none@var:target_parliament = 0 }
		TRI_BOP_generate_association_faction = yes
		for_each_loop = {
			array = TRI_parliament_association
			value = association
			if = {
				limit = { check_variable = { status@var:association = var:target_parliament } }
				add_to_variable = { BOP_hardliner@var:target_parliament = BOP_hardliner@var:association }
				add_to_variable = { BOP_moderate@var:target_parliament = BOP_moderate@var:association }
				add_to_variable = { BOP_none@var:target_parliament = BOP_none@var:association }
			}
		}
		subtract_from_variable = { valid_seats@var:target_parliament = BOP_none@var:target_parliament }
		round_variable = BOP_hardliner@var:target_parliament
		round_variable = BOP_moderate@var:target_parliament
		set_variable = { BOP_conservative@var:target_parliament = valid_seats@var:target_parliament }
		subtract_from_variable = { BOP_conservative@var:target_parliament = BOP_hardliner@var:target_parliament }
		subtract_from_variable = { BOP_conservative@var:target_parliament = BOP_moderate@var:target_parliament }
		while_loop_effect = {
			limit = { check_variable = { BOP_conservative@var:target_parliament < 0 } }
			add_to_variable = { BOP_conservative@var:target_parliament = 2 }
			subtract_from_variable = { BOP_hardliner@var:target_parliament = 1 }
			subtract_from_variable = { BOP_moderate@var:target_parliament = 1 }
		}
	}
	TRI_BOP_init_parliament = yes
	TRI_init_senate_house = yes
}
TRI_BOP_calculate_senate_seats = {
	set_temp_variable = { target_parliament = token:BA_TRI_senate_seat }
	TRI_BOP_calculate_parliament_seats = yes
}
TRI_BOP_calculate_house_seats = {
	set_temp_variable = { target_parliament = token:BA_TRI_house_seat }
	TRI_BOP_calculate_parliament_seats = yes
}
TRI_BOP_calculate_senate_house_seats = {
	TRI_BOP_calculate_senate_seats = yes
	TRI_BOP_calculate_house_seats = yes
}

	
##派系倾向改变
	#基础
		TRI_generate_conservative_percentage = {
			set_variable = { conservative@var:association = 1 }
			subtract_from_variable = { conservative@var:association = hardliner@var:association }
			subtract_from_variable = { conservative@var:association = moderate@var:association }
		}
		TRI_BOP_change_hardliner = {
			if = {
				limit = { check_variable = { no_faction@var:association = 0 } }
				TRI_generate_conservative_percentage = yes
				if = {
					limit = { check_variable = { TRI_policy_change_num > conservative@var:association } }
					add_to_variable = { hardliner@var:association = conservative@var:association }
					subtract_from_variable = { moderate@var:association = TRI_policy_change_num }
				}
				else = {
					add_to_variable = { hardliner@var:association = TRI_policy_change_num }
				}
				clamp_variable = {
					var = hardliner@var:association
					min = 0
					max = 1
				}
				clamp_variable = {
					var = moderate@var:association
					min = 0
					max = 1
				}
				TRI_generate_conservative_percentage = yes
			}
		}
		TRI_BOP_change_moderate = {
			if = {
				limit = { check_variable = { no_faction@var:association = 0 } }
				TRI_generate_conservative_percentage = yes
				if = {
					limit = { check_variable = { TRI_policy_change_num > conservative@var:association } }
					add_to_variable = { moderate@var:association = conservative@var:association }
					subtract_from_temp_variable = { TRI_policy_change_num = conservative@var:association }
					subtract_from_variable = { hardliner@var:association = TRI_policy_change_num }
				}
				else = {
					add_to_variable = { moderate@var:association = TRI_policy_change_num }
				}
				clamp_variable = {
					var = hardliner@var:association
					min = 0
					max = 1
				}
				clamp_variable = {
					var = moderate@var:association
					min = 0
					max = 1
				}
				TRI_generate_conservative_percentage = yes
			}
		}
	#指定社团
		TRI_BOP_change_hardliner_association = {
			custom_effect_tooltip = {
				localization_key = TRI_BOP_policy_change_tt
				TARGET = "[?association.GetTokenLocalizedKey]"
				TO = BOP_hardliner
			}
			TRI_BOP_change_hardliner = yes
			set_temp_variable = { target_parliament = status@var:association }
			TRI_BOP_calculate_parliament_seats = yes
		}
		TRI_BOP_change_moderate_association = {
			custom_effect_tooltip = {
				localization_key = TRI_BOP_seat_change_tt
				TARGET = "[?association.GetTokenLocalizedKey]"
				TO = BOP_moderate
			}
			TRI_BOP_change_moderate = yes
			set_temp_variable = { target_parliament = status@var:association }
			TRI_BOP_calculate_parliament_seats = yes
		}
	##指定议院
		TRI_BOP_change_hardliner_parliament = {
			custom_effect_tooltip = {
				localization_key = TRI_BOP_seat_change_tt
				TARGET = "[?target_parliament.GetTokenLocalizedKey]"
				TO = BOP_hardliner
			}
			hidden_effect = {
				for_each_loop = {
					array = TRI_parliament_association
					value = association
					if = {
						limit = { 
							check_variable = { status@var:association = var:target_parliament } 
						}
						TRI_BOP_change_hardliner = yes
					}
				}
			}
			TRI_BOP_calculate_parliament_seats = yes
		}
		TRI_BOP_change_moderate_parliament = {
			custom_effect_tooltip = {
				localization_key = TRI_BOP_seat_change_tt
				TARGET = "[?target_parliament.GetTokenLocalizedKey]"
				TO = BOP_moderate
			}
			hidden_effect = {
				for_each_loop = {
					array = TRI_parliament_association
					value = association
					if = {
						limit = { 
							check_variable = { status@var:association = var:target_parliament } 
						}
						TRI_BOP_change_moderate = yes
					}
				}
			}
			TRI_BOP_calculate_parliament_seats = yes
		}

	##两院
		TRI_BOP_change_hardliner_both_parliament = {
			custom_effect_tooltip = {
				localization_key = TRI_BOP_policy_change_tt
				TARGET = TRI_parliament
				TO = BOP_hardliner
			}
			hidden_effect = {
				for_each_loop = {
					array = TRI_parliament_association
					value = association
					TRI_BOP_change_hardliner = yes
				}
			}
			TRI_BOP_calculate_senate_house_seats = yes
		}
		TRI_BOP_change_moderate_both_parliament = {
			custom_effect_tooltip = {
				localization_key = TRI_BOP_policy_change_tt
				TARGET = TRI_parliament
				TO = BOP_moderate
			}
			hidden_effect = {
				for_each_loop = {
					array = TRI_parliament_association
					value = association
					TRI_BOP_change_moderate = yes
				}
			}
			TRI_BOP_calculate_senate_house_seats = yes
		}

##改变社团总议员数
	TRI_BOP_transfer_seat_1 = {
		subtract_from_variable = { seatNumber@var:from_association = 1 }
		add_to_variable = { seatNumber@var:to_association = 1 }
		subtract_from_temp_variable = { TRI_seat_change_num = 1 }
	}
	TRI_BOP_tranfer_seat = {
		custom_effect_tooltip = {
			localization_key = TRI_BOP_tranfer_seat_tt
			SEATFROM = "[?from_association.GetTokenLocalizedKey]"
			SEATTO = "[?to_association.GetTokenLocalizedKey]"
		}
		while_loop_effect = {
			limit = {
				check_variable = { TRI_seat_change_num > 0 }
				check_variable = { seatNumber@var:from_association > 0 }
			}
			TRI_BOP_transfer_seat_1 = yes
		}
		TRI_BOP_calculate_senate_house_seats = yes
	}